<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Tender Night</title><link>/zh-cn/post/</link><description>Recent content in Posts on Tender Night</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 07 Nov 2023 13:22:39 +0800</lastBuildDate><atom:link href="/zh-cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Go GMP 调度源码分析</title><link>/zh-cn/post/go-gmp-%E8%B0%83%E5%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><pubDate>Tue, 07 Nov 2023 13:22:39 +0800</pubDate><guid>/zh-cn/post/go-gmp-%E8%B0%83%E5%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid><description>这篇文章不会采用列举各种状态变换之类的方式说明调度过程，目的是让读者能根据简短的操作说明(对，很简短，所以你要学下 gdb 调试的常用指令)，自己跟</description></item><item><title>Go Mutex 源码分析</title><link>/zh-cn/post/go-mutex-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><pubDate>Sun, 05 Nov 2023 20:37:57 +0800</pubDate><guid>/zh-cn/post/go-mutex-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid><description>源码版本是 go 1.21，主要分析 sync.Mutex 中的内容，搞清楚加解锁过程和其中的调度过程。分析时请记住 Mutex 是被多个 goroutine 共享的量，每个协程都在运行代码中不同的位</description></item></channel></rss>